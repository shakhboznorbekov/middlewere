

definitions:
  models.Book:
    properties:
      author_name:
        type: string
      book_id:
        type: string
      created_at:
        type: string
      date:
        type: string
      name:
        type: string
      price:
        type: string
      updated_at:
        type: string
    type: object
  models.CreateBook:
    properties:
      author_name:
        type: string
      date:
        type: string
      name:
        type: string
      price:
        type: string
    type: object
  models.CreateOrder:
    properties:
      book_id:
        type: string
      user_id:
        type: string
    type: object
  models.CreateUser:
    properties:
      balance:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
  models.GetListBookResponse:
    properties:
      books:
        items:
          $ref: '#/definitions/models.Book'
        type: array
      count:
        type: integer
    type: object
  models.GetListOrderResponse:
    properties:
      count:
        type: integer
      orders:
        items:
          $ref: '#/definitions/models.Order'
        type: array
    type: object
  models.GetListUserResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.Order:
    properties:
      book_id:
        type: string
      created_at:
        type: string
      order_id:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.UpdateBook:
    properties:
      author_name:
        type: string
      book_id:
        type: string
      date:
        type: string
      name:
        type: string
      price:
        type: string
    type: object
  models.UpdateOrder:
    properties:
      book_id:
        type: string
      order_id:
        type: string
      user_id:
        type: string
    type: object
  models.UpdateUser:
    properties:
      balance:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      user_id:
        type: string
    type: object
  models.User:
    properties:
      balance:
        type: string
      created_at:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
info:
  contact: {}
paths:
  /book:
    get:
      consumes:
      - application/json
      description: Get List Book
      operationId: get_list_book
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetBookBody
          schema:
            $ref: '#/definitions/models.GetListBookResponse'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Get List Book
      tags:
      - Book
    post:
      consumes:
      - application/json
      description: Create Book
      operationId: create_book
      parameters:
      - description: CreateBookRequestBody
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.CreateBook'
      produces:
      - application/json
      responses:
        "201":
          description: GetBookBody
          schema:
            $ref: '#/definitions/models.CreateBook'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Create Book
      tags:
      - Book
  /book/{id}:
    delete:
      consumes:
      - application/json
      description: Delete By Id Book
      operationId: delete_by_id_book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetBookBody
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Delete By Id Book
      tags:
      - Book
    get:
      consumes:
      - application/json
      description: Get By Id Book
      operationId: get_by_id_book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetBookBody
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Get By Id Book
      tags:
      - Book
    put:
      consumes:
      - application/json
      description: Update Book
      operationId: update_book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: CreateBookRequestBody
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBook'
      produces:
      - application/json
      responses:
        "200":
          description: GetBooksBody
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Update Book
      tags:
      - Book
  /order:
    get:
      consumes:
      - application/json
      description: Get List Order
      operationId: get_list_order
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetOrderBody
          schema:
            $ref: '#/definitions/models.GetListOrderResponse'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Get List Order
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: Create Order
      operationId: create_order
      parameters:
      - description: CreateOrderRequestBody
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrder'
      produces:
      - application/json
      responses:
        "201":
          description: GetOrderBody
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Create Order
      tags:
      - Order
  /order/{id}:
    delete:
      consumes:
      - application/json
      description: Delete By Id Order
      operationId: delete_by_id_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetOrderBody
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Delete By Id Order
      tags:
      - Order
    get:
      consumes:
      - application/json
      description: Get By Id Order
      operationId: get_by_id_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetOrderBody
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Get By Id Order
      tags:
      - Order
    put:
      consumes:
      - application/json
      description: Update Order
      operationId: update_order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: CreateOrderRequestBody
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.UpdateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: GetOrdersBody
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Update Order
      tags:
      - Order
  /user:
    get:
      consumes:
      - application/json
      description: Get List User
      operationId: get_list_user
      parameters:
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetUserBody
          schema:
            $ref: '#/definitions/models.GetListUserResponse'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Get List User
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User
      operationId: create_user
      parameters:
      - description: CreateUserRequestBody
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: GetUserrBody
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Create User
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete By Id User
      operationId: delete_by_id_user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetUserBody
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Delete By Id User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get By Id User
      operationId: get_by_id_user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: GetUserBody
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Get By Id User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User
      operationId: update_user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: CreateUserRequestBody
        in: body
        name: actor
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: GetUsersBody
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Update User
      tags:
      - User
swagger: "2.0"